yarn run v1.15.2
$ ./run.sh
[1/4] Resolving packages...
[2/4] Fetching packages...
[3/4] Linking dependencies...
[4/4] Building fresh packages...
Running ./suites/forEach.js using Node v11.13.0
$ /Users/robert/wkdir/js-optimization-games/node_modules/.bin/cathedra ./suites/forEach.js
Testing forEach Implementations
  √ for(val i = 0; i < arg.length; i++) (native for-loop iteration) - 12210.0122 ops/s (best)
  ✖ for(const val in arg) (native for...in-loop) - 9940.3579 ops/s (worst)
  ● arg.forEach (native .forEach) - 10040.1606 ops/s 
  ● _.forEach (Lodash; with dereference) - 10330.5785 ops/s 
  ● _forEach (Lodash; no dereference) - 10822.5108 ops/s 
Running ./suites/stringCoercion.js using Node v11.13.0
$ /Users/robert/wkdir/js-optimization-games/node_modules/.bin/cathedra ./suites/stringCoercion.js
Testing toString Implementations
  ✖ _.toString (Lodash; dereference) - 3260.5152 ops/s (worst)
  ● _toString (Lodash; direct call) - 3441.1562 ops/s 
  ● "" + arg (string coercion through addition operator) - 3593.2447 ops/s 
  ● arg.toString() (blind .toString() method call; no type checking) - 3483.1069 ops/s 
  ● typeof arg === "string" ? arg : arg.toString() ; (.toString() method call with typeof sanity check in ternary operator) - 3576.5379 ops/s 
  √ if(typeof arg !== "string") arg = arg.toString() (.toString() method call with typeof sanity check in if block) - 3759.3985 ops/s (best)
  ● _isString(arg) (.toString() method call with direct Lodash _.isString() sanity check) - 3724.3948 ops/s 
  ● _.isString(arg) (.toString() method call with dereferenced Lodash _.isString() sanity check) - 3573.9814 ops/s 
  ● String(arg) (String constructor; no type checking) - 3698.2249 ops/s 
Done in 32.78s.
